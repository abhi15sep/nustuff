*nwatson.txt*

Search and replace:
Apply Perl commands like s/// to a buffer
:perldo s/x/y/g

regex:
/v at beginning of regex to avoid having to escape for magic

sudo:
:w !sudo tee % >/dev/null

ssh:
vim scp://<hostname>/path/to/file

open:
Open in existing gvim
gvim --remote-silent <file>

editing:
yt<x> yank from current cursor to <x> char in the current line
yi[{"\[(] yank between given brackets or quotes
dt<x> delete from current cursor to <x> char in the current line
di[{"\[(] delete between given brackets or quote
:%y yank whole buffer
:%y+ yank whole buffer into clipboard

Editing maps:
<leader>a Tabularize
<leader>v vsplie
<leader>= swap between splits
<leader>mc wrap with boxes
<leader>xc remove wrap with boxes
<leader>c yank to system clipboard
<leader>ca yank buffer to system clipboard
<leader>p paste from system clipboard
:nmap list all maps

arg:
My custom arg builder.
:call Marg turns
domain

into

--domain | --domai | --doma | --dom | --do | --d |\
-domain | --domai | --doma | --dom | --do | --d)
shift
domain=$1
;;

Buffer control:
; search for and change buffer
noremap <C-Tab> :bnext <CR>     Next buffer
noremap <S-Tab> :bprevious <CR> Previous buffer

Layout:
Center with:
:1,4 center
Also left and right.

Running and testing
:Autorun enable auto running buffer on write
:Noautorun disable auto running buffer on write
<leader>r Run current file

Sessions
mks: <session> Make session for later retrieval (Session.vim is default name)
source <session> Load saved session
ctrl+o+o Open the last files edited and go to the last cursor location

Undo:
Go back 10 minutes
:earlier 10m
Go forward 10 minutes
:later 10m

Numbers:
ctrl-a increments number. Works with counts: n ctrl-a to increment n times.
ctrl-z decrements number

Moving:
% Move to matching bracket or brace.
gd fine where variable under curso is defined.
crtl-o go to previous location
w beginning of next word
e end of next word

Indent:
gg=G Reindent whole file.
=% Reindent current code block.
n== Reindent the next n lines.

Registers:
:ctrl-r<register> past register in command line
:registers to see all registers.
"+ or "* is the clipboard

Debugging:
:message See last message that passed by. Works on boot messages too.
